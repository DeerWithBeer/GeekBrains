input_list = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# ВХодной лист слов
i = 0  # Переменная для счётчика
result = ""  # Строка дл хранения результата
while i < len(input_list):  # Пока не просмотрен весь список
    # Условие если найдена цифра, или знак +/- с цифрой
    if (input_list[i].startswith(('+', '-')) and input_list[i][1:].isdigit()) or input_list[i].isdigit():
        # Сложная форма дополнения нулями числа если оно содержит +/- или не содержит
        # Построена по принципу того, что str.find() в случае не нахождения возращает -1
        # А 0 в степени 0 даёт еденицу. ABS, потому что 0^(-x)=Infinite
        # st.zfill(x) умеет распознавать плюс и минус, и потому добавляет x нулей слева от числа
        input_list[i] = input_list[i].zfill(2 + 0 ** (abs(input_list[i].find('-') + input_list[i].find('+') + 1)))
        # Вставка первой кавычки
        input_list.insert(i, '"')
        # Сдвиг i "каретки" из за добавления новjго элемента на два символа вправо (1ая кавыка и само число)
        i += 2
        # Вставка второй кавычки
        input_list.insert(i, '"')
    # Шаг цикла
    i += 1
# Обнуление счётчика
i = 0
# Переменная триггер
find_number = False
# Цикл прохождения всего списка кроме последнего элемента
while i < len(input_list) - 1:
    # Вставка текущего элемента в строку
    result += input_list[i]
    # Если найдена кавыка переключить триггер
    if input_list[i] == '"': find_number = not find_number
    # Если триггер выключен, то вставить пробел
    if not find_number: result += ' '
    # Шаг цикла
    i += 1
# Втсавка последнего
result += input_list[i]
print(result)
